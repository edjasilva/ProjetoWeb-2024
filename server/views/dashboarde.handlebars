<!--<div class="row">
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Gráfico de barras
                </div>
                <div class="card-body">
                    <canvas id="myBarChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.getElementById('myBarChart').getContext('2d');
            const data = {{{json data}}}; 

            const labels = data.map(item => item.label);
            const values = data.map(item => parseInt(item.value, 10));

            const myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Quantidade',
                        backgroundColor: "rgba(2,117,216,1)",
                        borderColor: "rgba(2,117,216,1)",
                        data: values,
                    }],
                },
                options: {
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 6
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: Math.max(...values) + 1,
                                maxTicksLimit: 6
                            },
                            gridLines: {
                                display: true
                            }
                        }],
                    },
                    legend: {
                        display: false
                    }
                }
            });
        });
    </script>


    <div class="col-lg-6">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-pie me-1"></i>
                Gráfico circular
            </div>
            <div class="card-body"><canvas id="myPieChart" width="100%" height="50"></canvas></div>
            <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
        </div>
    </div>

    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#292b2c';

        // Pie Chart Example
        document.addEventListener('DOMContentLoaded', function () {
            const ctx = document.getElementById("myPieChart").getContext('2d');;
            const data = {{{ json data }}};

        const labels1 = data.map(item => item.label1);
        const values1 = data.map(item => parseInt(item.value1, 10));

        const myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels1,
                datasets: [{
                    data: values1,
                    backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745'],
                }],
            },
        })});
    </script> -->


    <div class="row">
        <!-- Gráfico de Barras -->
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Gráfico de barras
                </div>
                <div class="card-body">
                    <canvas id="myBarChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
            </div>
        </div>
    
    
    
        <!-- Gráfico de Pizza -->
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-pie me-1"></i>
                    Gráfico circular
                </div>
                <div class="card-body">
                    <canvas id="myPieChart" width="100%" height="50"></canvas>
                </div>
                <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-6 mx-auto">
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-pie me-1"></i>
                Histograma
            </div>
            <div class="card-body"><canvas id="myHistogram" width="100%" height="50"></canvas></div>
            <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
        </div>
    </div>
    
<!--
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const data = {{{json data}}}; 

            // Gráfico de Barras
            const barCtx = document.getElementById('myBarChart').getContext('2d');
            const barLabels = data.map(item => item.label);
            const barValues = data.map(item => parseInt(item.value, 10));

            const myBarChart = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: barLabels,
                    datasets: [{
                        label: 'Quantidade',
                        backgroundColor: "rgba(2,117,216,1)",
                        borderColor: "rgba(2,117,216,1)",
                        data: barValues,
                    }],
                },
                options: {
                    scales: {
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 6
                            }
                        },
                        y: {
                            ticks: {
                                min: 0,
                                max: Math.max(...barValues) + 1,
                                maxTicksLimit: 6
                            },
                            grid: {
                                display: true
                            }
                        },
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });    const pieCtx = document.getElementById('myPieChart').getContext('2d');
            const pieLabels = data.map(item => item.label);
            const pieValues = data.map(item => parseInt(item.value, 10));

            const myPieChart = new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: pieLabels,
                    datasets: [{
                        data: pieValues,
                        backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745', '#17a2b8', '#6c757d'],
                    }],
                },
            });
        });
    </script>

-->

    <script>
        document.addEventListener('DOMContentLoaded', function() {
           
            const barChartData = {{{json barChartData}}};
            const pieChartData = {{{json pieChartData}}};
            const histogramData = {{{json histogramData}}};


            console.log('barChartData:', barChartData);
            console.log('pieChartData:', pieChartData);
            console.log('histogramData:', histogramData);

            // Gráfico de Barras
            const barCtx = document.getElementById('myBarChart').getContext('2d');
            const barLabels = barChartData.map(item => item.label);
            const barValues = barChartData.map(item => parseInt(item.value, 10));

            const myBarChart = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: barLabels,
                    datasets: [{
                        label: 'Quantidade',
                        backgroundColor: "rgba(2,117,216,1)",
                        borderColor: "rgba(2,117,216,1)",
                        data: barValues,
                    }],
                },
                options: {
                    scales: {
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                maxTicksLimit: 6
                            }
                        },
                        y: {
                            ticks: {
                                min: 0,
                                max: Math.max(...barValues) + 1,
                                maxTicksLimit: 6
                            },
                            grid: {
                                display: true
                            }
                        },
                    },
                    plugins: {
                        legend: {
                            display: false
                        }
                    }
                }
            });    const pieCtx = document.getElementById('myPieChart').getContext('2d');
            const pieLabels = pieChartData.map(item => item.label);
            const pieValues = pieChartData.map(item => parseInt(item.value, 10));

            const myPieChart = new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: pieLabels,
                    datasets: [{
                        data: pieValues,
                        backgroundColor: ['#007bff', '#dc3545', '#ffc107', '#28a745', '#17a2b8', '#6c757d'],
                    }],
                },
            });
        });



 const histogramValues = {{{histogramData}}};

        const bins = [0, 1, 2, 3, 4, 5]; // Intervalos dos bins

        // Função para calcular a frequência de cada bin
        function calculateBinFrequencies(histogramData, bins) {
            const frequencies = new Array(bins.length - 1).fill(0);
            histogramData.forEach(value => {
                for (let i = 0; i < bins.length - 1; i++) {
                    if (value >= bins[i] && value < bins[i + 1]) {
                        frequencies[i]++;
                        break;
                    }
                }
            });
            return frequencies;
        }

        const frequencies = calculateBinFrequencies(histogramValues, bins);

        const histogramCtx = document.getElementById('myHistogram').getContext('2d');
        new Chart(histogramCtx, {
            type: 'bar',
            data: {
                labels: bins.slice(0, -1).map((bin, index) => `${bin}-${bins[index + 1]}`),
                datasets: [{
                    label: 'Frequency',
                    data: frequencies,
                    backgroundColor: 'rgba(2, 117, 216, 0.7)',
                    borderColor: 'rgba(2, 117, 216, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            maxTicksLimit: bins.length
                        },
                        barPercentage: 1.0,
                        categoryPercentage: 1.0
                    },
                    y: {
                        ticks: {
                            beginAtZero: true
                        },
                        grid: {
                            display: true
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    </script>